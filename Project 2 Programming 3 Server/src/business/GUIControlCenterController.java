package business;

import data.OperatorData;
import domain.Operator;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.image.ImageView;
import javafx.stage.Stage;

public class GUIControlCenterController {
	@FXML
	private TableView tvStateEmergencyReported;
	@FXML
	private ImageView imageProfile;
	@FXML
	private Button btnEditProfile;
	@FXML
	private ComboBox cmbTypeEmergency;
	@FXML
	private Label lMessageErrorTypeEmergency;
	@FXML
	private Label lMessageErrorUbication;
	@FXML
	private Label lMessageErrorDescription;
	@FXML
	private TextField tFNumberOfEmergenciesByType;
	@FXML
	private TableView tvOperators;
	@FXML
	private Button btnReturn;
	@FXML
	private Button btnAttendEmergency;
	private Server server = new Server();
	
	public GUIControlCenterController() {
	}
	public void initialize() {
        setupTableColumns();
        loadOperators();
        
    }

    private void setupTableColumns() {
        // Columna: Nombre
        TableColumn<Operator, String> nameColumn = new TableColumn<>("Nombre");
        nameColumn.setCellValueFactory(cellData -> {
            Operator operator = cellData.getValue();
            return new javafx.beans.property.SimpleStringProperty(operator.getName() + " " + operator.getSurnames());
        });

        // Columna: Emergencias Atendidas
        TableColumn<Operator, Integer> emergenciesAttendedColumn = new TableColumn<>("Emergencias Atendidas");
        emergenciesAttendedColumn.setCellValueFactory(cellData -> {
            Operator operator = cellData.getValue();
            return new javafx.beans.property.SimpleIntegerProperty(operator.getNumberOfEmergenciesAttended()).asObject();
        });

        // Columna: Estado (Disponible / Atendiendo)
        TableColumn<Operator, String> statusColumn = new TableColumn<>("Estado");
        statusColumn.setCellValueFactory(cellData -> {
            Operator operator = cellData.getValue();
            String status = operator.isAvailable() ? "Disponible" : "Atendiendo";
            return new javafx.beans.property.SimpleStringProperty(status);
        });
        tvOperators.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);
        // AÃ±adir las columnas a la tabla
        tvOperators.getColumns().addAll(nameColumn, emergenciesAttendedColumn, statusColumn);
    }

    private void loadOperators() {
        ObservableList<Operator> operators = FXCollections.observableArrayList(OperatorData.getAll());
        tvOperators.setItems(operators);
    }
	// Event Listener on Button[#btnEditProfile].onAction
	@FXML
	public void editProfile(ActionEvent event) {
		server.startServer();
	}
	// Event Listener on Button[#btnReturn].onAction
	@FXML
	public void returnLogin(ActionEvent event) {
		closeWindows();
	}
	// Event Listener on Button[#btnAttendEmergency].onAction
	@FXML
	public void attendEmergency(ActionEvent event) {
		// TODO Autogenerated
	}
	
	public void closeWindows() {
		try {
			FXMLLoader loader = new FXMLLoader(getClass().getResource("/presentation/GUILoginOperators.fxml"));
			Parent root = loader.load();
			Scene scene = new Scene(root);
			Stage stage = new Stage();
			stage.setScene(scene);
			stage.show();
			Stage temp = (Stage) btnEditProfile.getScene().getWindow();
			temp.close();
			//cargar style (por el momento no la vamos a agregar, pero esta linea es la misma que en el main)
		} catch (Exception e) {
			System.out.println(e.getMessage());
			e.printStackTrace();
		}
	}
}
